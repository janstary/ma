.Dd April 28, 2022
.Dt MA 1
.Os
.Sh NAME
.Nm ma
.Nd Markov algorithms
.Sh SYNOPSIS
.Nm
.Op Fl v
.Ar file
.Sh DESCRIPTION
.Nm
runs Markov rewriting algorithms.
Every such algorithm is described by a finite sequence of rewriting rules;
every such rule has a left and right side,
specifying what gets rewriten to what.
For any given expression, the first rule whose left side
matches a substring of the expression is used;
the leftmost matching substring gets rewritten.
The rewriting stops when
.Sq \\.
(the dot) at the end of a rule marks an explicit stop,
or when there are no more matches to be rewritten.
.Pp
Two characters are recognized as special:
.Sq \\.
(the dot) as described above, and
.Sq _
(the underscore) meaning the empty word.
Note that the empty word is always the leftmost matching substring.
.Pp
The set of rules is given in the named
.Ar file .
Every line contains the left and right side, separated by whitespace.
The rest of the line, separated by whitespace, is ignored.
Empty lines are ignored.
.Pp
It is an error to use
.Sq \\.
anywhere else beside the end of a rule;
it is also an error to use
.Sq _
in an otherwise nonempty expression.
.Pp
After the rules are parsed,
.Nm
rewrites every line of standard input.
.Sh EXAMPLES
The following algorithm reverses a word in {a,b}:
.Bd -literal
+++ ++
++a a++
++b b++
++  _.
+aa a+a
+ab b+a
+ba a+b
+bb b+b
_   +
.Ed
.Pp
.Dl $ echo abaabb | ma rev.ma
.Dl bbaaba
.Sh AUTHORS
.An Jan Star√Ω Aq Mt hans@stare.cz
